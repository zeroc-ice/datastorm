# **********************************************************************
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
# **********************************************************************

#
# Select an installation base directory. The directory will be created
# if it does not exist.
#
prefix                  ?= /opt/DataStorm-$(version)

#
# The "root directory" for runpath embedded in executables. Can be set
# to change the runpath added to Ice executables.
#
# If not set, a runpath relative to the path of the executable is
# embedded (using @loader_path on OS X and $ORIGIN on Linux).
#
#embedded_runpath_prefix ?= /opt/Ice-$(mmversion)

#
# Define embedded_runpath as no if you don't want any runpath added to
# the executables. If not set, defaults to to "yes"
#
embedded_runpath        ?= yes

#
# Define OPTIMIZE as yes if you want to build with optimization.
# Otherwise Ice is build with debug information.
#
OPTIMIZE                ?= yes

#
# Define PLATFORMS to the list of platforms to build. This defaults
# to the first supported platform for this system.
#
# Run `make print V=supported-platforms' to see the list of supported
# platforms on this system.
#
PLATFORMS               ?= $(firstword $(supported-platforms))

#
# Configurations to build. This defaults to the first supported
# configuration.
#
# Run `make print V=supported-configs` to see the list of supported
# configurations.
#
CONFIGS                 ?= $(firstword $(supported-configs))

# ----------------------------------------------------------------------
# Don't change anything below this line!
# ----------------------------------------------------------------------

os                      ?= $(shell uname)

include $(top_srcdir)/config/Make.rules.$(os)
include $(top_srcdir)/config/Make.project.rules
include $(top_srcdir)/config/Make.tests.rules

version                 = 1.1.1
soversion               = 11

#
# The compatversion is the lowest patch release with the same API.
# For example, if 1.0.1 introduces no new API compared to 1.0.0, we
# would set version to 1.0.1 and compatversion to 1.0.0.
# Used for OS X libraries.
#
compatversion           = $(version)

#
# Languages, platforms and configurations to build
#
supported-languages     = cpp
supported-configs       = shared

ifeq ($(filter all cpp,$(DATASTORM_BIN_DIST)),)
bindir                  ?= $(call mappingdir,$(or $1,$(currentdir)),bin)
libdir                  ?= $(call mappingdir,$(or $1,$(currentdir)),lib)
slicedir                ?= $(top_srcdir)/slice
includedir              ?= $(call mappingdir,$(or $1,$(currentdir)),include)

usr_dir_install         := $(call is-system-install,$(prefix))
install_bindir          ?= $(prefix)/bin
install_libdir          ?= $(prefix)/lib
install_includedir      ?= $(prefix)/include
install_docdir          ?= $(prefix)$(if $(usr_dir_install),/share/doc/datastorm)
install_slicedir        ?= $(prefix)$(if $(usr_dir_install),/share/datastorm)/slice
install_mandir          ?= $(prefix)$(if $(usr_dir_install),/share)/man
else
$(eval $(call create-project-dependencies,datastorm,$(DATASTORM_HOME),cpp,cpp,DataStorm))
bindir                  ?= $(datastorm_bindir)
libdir                  ?= $(datastorm_libdir)
slicedir                ?= $(datastorm_slicedir)
includedir              ?= $(datastorm_includedir)
endif

#
# Support for Ice libraries
#
$(eval $(call create-project-dependencies,ice,$(ICE_HOME),cpp,cpp,Ice))

ifeq ($(filter all cpp,$(DATASTORM_BIN_DIST)),)
datastorm_cpp_cppflags := -I$(top_srcdir)/cpp/include -I$(top_srcdir)/cpp/include/generated
else
datastorm_cpp_cppflags := $(if $(datastorm_includedir),-I$(datastorm_includedir) $(if $(datastorm_src_dist),-I$(datastorm_includedir)/generated))
endif
